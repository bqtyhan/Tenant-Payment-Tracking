/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tenantpaymenttrackingproject;

/**
 *
 * @author batuh
 */
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tenantpaymenttrackingproject.Tenant;
import tenantpaymenttrackingproject.User;

public class PaymentScreen extends javax.swing.JFrame {

    /**
     * Creates new form PaymentScreen
     */
    private List<Tenant> tenants;  
    private List<String> paymentRecords = new ArrayList<String>();
    public PaymentScreen() {
        initComponents();
            setIconImage(new ImageIcon(getClass().getResource("/tenantpaymenttrackingproject/youricon.jpg")).getImage());

        List<Period> datess = Period.getdatePeriods();
        deadlinecombobox.removeAllItems();
        for (Period p : datess) {
            deadlinecombobox.addItem(p.getDate());
        }
        
    }
    public void setUserInfo(User user) {
        userinfolbl.setText(
            "Username: " + user.getUsername() +
            " | Password: " + user.getPassword()
        );
          

    }
    public void loadTenantsFromMemory() {
    tenantcombobox.removeAllItems();
    for (Tenant t : DataStore.tenantList) {
        tenantcombobox.addItem(t.getName() + " - " + t.getPropertyName());
    }
}

        /**
     * TenantScreen'den gelen kiracı listesini alır
     * comboBox'u temizler ve her birini "Adı - Mülkü" formatında ekler.
     */
    public void setTenants(List<Tenant> tenants) {
        this.tenants = tenants;

        // Açılır menüyü sıfırla
        tenantcombobox.removeAllItems();

        // Her Tenant nesnesini ekle
        for (Tenant t : tenants) {
            String item = t.getName() + " - " + t.getPropertyName();
            tenantcombobox.addItem(item);
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tenanttxt = new javax.swing.JLabel();
        logoutbtn = new javax.swing.JButton();
        reportbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        payrecordtable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        amounttxtfield = new javax.swing.JTextField();
        tenantcombobox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        deadlinecombobox = new javax.swing.JComboBox<>();
        payrecord = new javax.swing.JButton();
        userinfolbl = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        monthlyrep = new javax.swing.JButton();
        recordsBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tenant Payment Tracking System");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        tenanttxt.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        tenanttxt.setText("Tenant Management");

        logoutbtn.setFont(tenanttxt.getFont());
        logoutbtn.setText("Log out");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tenanttxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 367, Short.MAX_VALUE)
                .addComponent(logoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tenanttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(logoutbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        reportbtn.setText("Generate Total Report");
        reportbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportbtnActionPerformed(evt);
            }
        });

        payrecordtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tenant", "period", "Amount"
            }
        ));
        payrecordtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payrecordtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(payrecordtable);

        jLabel1.setText("Tenant : ");

        tenantcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenantcomboboxActionPerformed(evt);
            }
        });

        jLabel2.setText("Amount ($) : ");

        jLabel3.setText("Period (MM-YYYY):");

        payrecord.setText("Add Payment Record");
        payrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrecordActionPerformed(evt);
            }
        });

        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        monthlyrep.setText("Genarate  Monthly  Report");
        monthlyrep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyrepActionPerformed(evt);
            }
        });

        recordsBtn.setText("Records");
        recordsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reportbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(recordsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(monthlyrep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(payrecord, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tenantcombobox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(deadlinecombobox, 0, 323, Short.MAX_VALUE)
                                        .addComponent(amounttxtfield)))))
                        .addGap(137, 137, 137)
                        .addComponent(userinfolbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tenantcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(amounttxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(userinfolbl, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(deadlinecombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payrecord)
                    .addComponent(updatebtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportbtn)
                    .addComponent(monthlyrep)
                    .addComponent(recordsBtn))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        LoginScreen lgn = new LoginScreen();
        lgn.setVisible(true);

    }//GEN-LAST:event_logoutbtnActionPerformed

    private void tenantcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenantcomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenantcomboboxActionPerformed

    private void payrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrecordActionPerformed
        // TODO add your handling code here:
       String tnt = tenantcombobox.getSelectedItem() != null ? tenantcombobox.getSelectedItem().toString() : "";
        String time = deadlinecombobox.getSelectedItem() != null ? deadlinecombobox.getSelectedItem().toString() : "";
        String amount = amounttxtfield.getText().trim();
        double value;
        try {
            value = Double.parseDouble(amount);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                "Please enter a valid number.",
                "Incorrect Input",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        String record = tnt + " | " + time + " | $" + amount;
        paymentRecords.add(record);
        DataStore.paymentRecords.add(record);
        DefaultTableModel model = (DefaultTableModel) payrecordtable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String existingTenant = model.getValueAt(i, 0).toString();
            String existingPeriod = model.getValueAt(i, 1).toString();
            if (existingTenant.equals(tnt) && existingPeriod.equals(time)) {
                JOptionPane.showMessageDialog(this,
                    "For this tenant, payment for the current period is available.",
                    "Please be aware of the double enrolment process",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        model.addRow(new Object[]{ tnt, time, amount });
        amounttxtfield.setText("");

        
    }//GEN-LAST:event_payrecordActionPerformed

    private void reportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) payrecordtable.getModel();
        double total = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            String amtStr = model.getValueAt(i, 2).toString();
            try {
                total += Double.parseDouble(amtStr);
            } catch (NumberFormatException e) {
                // Geçersiz değer varsa atla
            }
        }
        JOptionPane.showMessageDialog(this,
            String.format("Total Payment Amount: $%.2f", total),
            "Total Report",
            JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_reportbtnActionPerformed

    private void payrecordtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payrecordtableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel mdl = (DefaultTableModel) payrecordtable.getModel();
        int selectedRow = payrecordtable.getSelectedRow();
        if (selectedRow != -1) { // Eğer bir satır seçildiyse
            tenantcombobox.setSelectedItem(mdl.getValueAt(selectedRow, 0).toString());
            deadlinecombobox.setSelectedItem(mdl.getValueAt(selectedRow, 1).toString());
            amounttxtfield.setText(mdl.getValueAt(selectedRow, 2).toString());
        }
    }//GEN-LAST:event_payrecordtableMouseClicked

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mdl = (DefaultTableModel) payrecordtable.getModel();
        String newTenant = tenantcombobox.getSelectedItem() != null ? tenantcombobox.getSelectedItem().toString() : "";
        String newPeriod = deadlinecombobox.getSelectedItem() != null ? deadlinecombobox.getSelectedItem().toString() : "";

        String newAmountStr = amounttxtfield.getText().trim();
        int selectedRow = payrecordtable.getSelectedRow(); 
        if (selectedRow != -1) {
            try {
                Double.parseDouble(newAmountStr); // Sadece geçerli mi diye bakıyoruz
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(
                        this,
                        "Please enter a valid number.",
                        "Incorrect Input",
                        JOptionPane.WARNING_MESSAGE
                );
                return;
            }

       
            mdl.setValueAt(newTenant, selectedRow, 0);
            mdl.setValueAt(newPeriod, selectedRow, 1);
            mdl.setValueAt(newAmountStr, selectedRow, 2);
        paymentRecords.set(selectedRow, newTenant + " | " + newPeriod + " | $" + newAmountStr);

         JOptionPane.showMessageDialog(this,"The record has been successfully updated.","Process Completed",JOptionPane.INFORMATION_MESSAGE);


            
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void monthlyrepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyrepActionPerformed
        // TODO add your handling code here:
        String selectedPeriod = (String) deadlinecombobox.getSelectedItem();
        if (selectedPeriod == null) {
            JOptionPane.showMessageDialog(this,
                    "Please select a period!",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) payrecordtable.getModel();
        double total = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            String period = model.getValueAt(i, 1).toString();
            if (period.equals(selectedPeriod)) {
                String amtStr = model.getValueAt(i, 2).toString();
                try {
                    total += Double.parseDouble(amtStr);
                } catch (NumberFormatException ignore) {
                }
            }
        }

        JOptionPane.showMessageDialog(this,
                String.format("%s Total payments for the selected period: $%.2f", selectedPeriod, total),
                "Monthly Report",
                JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_monthlyrepActionPerformed

    private void recordsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordsBtnActionPerformed
        // TODO add your handling code here:
        Records record = new Records();
        this.setVisible(false);
        record.setVisible(true);
    }//GEN-LAST:event_recordsBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amounttxtfield;
    private javax.swing.JComboBox<String> deadlinecombobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JButton monthlyrep;
    private javax.swing.JButton payrecord;
    private javax.swing.JTable payrecordtable;
    private javax.swing.JButton recordsBtn;
    private javax.swing.JButton reportbtn;
    private javax.swing.JComboBox<String> tenantcombobox;
    private javax.swing.JLabel tenanttxt;
    private javax.swing.JButton updatebtn;
    private javax.swing.JLabel userinfolbl;
    // End of variables declaration//GEN-END:variables
}
